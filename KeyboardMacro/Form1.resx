<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>